{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SaveOrderService = /*#__PURE__*/(() => {\n  class SaveOrderService {\n    constructor(http) {\n      this.http = http;\n      // BASE_URL=\"https://ju47zm5mz4.execute-api.ap-northeast-1.amazonaws.com/upload\";\n      this.BASE_URL = \"https://yumszrjbyg.execute-api.ap-northeast-1.amazonaws.com/v1\";\n      this.dealer = JSON.parse(sessionStorage.getItem(\"dealer\") || '{}');\n      this.order = {\n        make: \"\",\n        model: \"\",\n        year: \"\",\n        fuelType: \"\",\n        customerId: \"\",\n        customerName: \"\",\n        city: \"\",\n        orderId: \"\",\n        orderStatus: \"\"\n      };\n    }\n    uploadFile(fileContent) {\n      const fileInput = {\n        fileContent: fileContent,\n        dealerId: this.dealer.dealerId\n      };\n      return this.http.post(this.BASE_URL + '/saveorder', fileInput).pipe(catchError(this.errorHandler));\n    }\n    // uploadFiles(file:any ){\n    //   const fileInput = {\n    //     line: file,\n    //     dealerId : this.dealer.dealerId\n    //   }\n    //   return this.http.post(this.BASE_URL+'/saveorder', fileInput).pipe(catchError(this.errorHandler));\n    // }\n    editOrder(order) {\n      return this.http.put(this.BASE_URL + '/updateorder', order).pipe(catchError(this.errorHandler));\n    }\n    fetchOrders(customerId, orderId, showAll) {\n      const orderInput = {\n        \"customerId\": customerId,\n        \"orderId\": orderId,\n        \"dealerId\": this.dealer.dealerId,\n        \"showAll\": showAll\n      };\n      return this.http.post(this.BASE_URL + '/orderlist', orderInput).pipe(catchError(this.errorHandler));\n    }\n    errorHandler(error) {\n      return throwError(error.error.message || 'server Error');\n    }\n  }\n  SaveOrderService.ɵfac = function SaveOrderService_Factory(t) {\n    return new (t || SaveOrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SaveOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SaveOrderService,\n    factory: SaveOrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return SaveOrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}