{"ast":null,"code":"import { VERSION } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CsvparserComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2, \" \");\n  }\n}\nfunction CsvparserComponent_tr_11_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r8 = ctx.index;\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r4[j_r8], \" \");\n  }\n}\nfunction CsvparserComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, CsvparserComponent_tr_11_td_1_Template, 2, 1, \"td\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.lines[0]);\n  }\n}\n//import { NgxCsvParser, NgxCSVParserError } from 'ngx-csv-parser';\nexport let CsvparserComponent = /*#__PURE__*/(() => {\n  class CsvparserComponent {\n    constructor() {\n      this.name = \"Angular \" + VERSION.major;\n      this.lines = [];\n      this.linesR = [];\n    }\n    ngOnInit() {}\n    changeListener(files) {\n      let fileList = files.target.files;\n      if (fileList && fileList.length > 0) {\n        let file = fileList[0];\n        console.log(file.name);\n        console.log(file.size);\n        console.log(file.type);\n        let reader = new FileReader();\n        reader.readAsText(file);\n        console.log(reader);\n        reader.onload = e => {\n          let csv = reader.result;\n          let allTextLines = [];\n          allTextLines = csv.split(/\\r|\\n|\\r/);\n          let headers = allTextLines[0].split(\";\");\n          let data = headers;\n          let tarr = [];\n          for (let j = 0; j < headers.length; j++) {\n            tarr.push(data[j]);\n          }\n          this.lines.push(tarr);\n          let tarrR = [];\n          let arrl = allTextLines.length;\n          let rows = [];\n          for (let i = 1; i < arrl; i++) {\n            rows.push(allTextLines[i].split(\";\"));\n          }\n          for (let j = 0; j < arrl; j++) {\n            tarrR.push(rows[j]);\n          }\n          this.linesR.push(tarrR);\n        };\n      }\n    }\n  }\n  CsvparserComponent.ɵfac = function CsvparserComponent_Factory(t) {\n    return new (t || CsvparserComponent)();\n  };\n  CsvparserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CsvparserComponent,\n    selectors: [[\"app-csvparser\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"container\"], [2, \"text-align\", \"center\"], [\"type\", \"file\", 1, \"upload\", 3, \"change\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CsvparserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"File Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\")(4, \"br\");\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function CsvparserComponent_Template_input_change_5_listener($event) {\n          return ctx.changeListener($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"table\", 3)(7, \"thead\")(8, \"tr\");\n        i0.ɵɵtemplate(9, CsvparserComponent_th_9_Template, 2, 1, \"th\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"tbody\");\n        i0.ɵɵtemplate(11, CsvparserComponent_tr_11_Template, 2, 1, \"tr\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.lines[0]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.linesR[0]);\n      }\n    },\n    directives: [i1.NgForOf],\n    styles: [\"\"]\n  });\n  return CsvparserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}